{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/Appbar/Appbar.module.css","components/transitions.module.css","components/ContactList/ContactList.module.css","components/ContactList/transitions.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/Layout/Layout.js","components/Appbar/Appbar.js","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/contacts/contactsReducers.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","axios","defaults","baseURL","addContact","name","number","dispatch","contactsActions","post","then","data","catch","error","fetchContacts","get","removeContact","id","delete","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","contact","toLowerCase","includes","getContactById","contactId","find","item","Layout","children","className","Appbar","styles","header","CSSTransition","in","appear","classNames","transitions","timeout","title","ContactForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","contactForm","onSubmit","htmlFor","contactFormItem","type","onChange","contactBtn","Component","mapDispatchToProps","contactsOperations","connect","ownProps","contactsSelectors","onRemove","console","log","contactData","button","onClick","TransitionGroup","component","contactList","map","key","uuidv4","onChangeFilter","filterContainer","filterName","filterField","App","onFetchContacts","isLoadingContacts","createReducer","action","payload","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03ae3262.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"contactFormItem\":\"ContactForm_contactFormItem__20OVP\",\"contactBtn\":\"ContactForm_contactBtn__1QKp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1m2re\",\"button\":\"Contact_button__1wUL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2eDOn\",\"filterName\":\"Filter_filterName__2ZMlt\",\"filterField\":\"Filter_filterField__32LCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Appbar_title__1hL3J\",\"header\":\"Appbar_header__P0ILF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"transitions_appear__3JmJR\",\"appearActive\":\"transitions_appearActive__3Yc8C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contact\":\"ContactList_contact__3ZIyH\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transitions_enter__xQ9hX\",\"enterActive\":\"transitions_enterActive__GM_D_\",\"exit\":\"transitions_exit__2hksT\",\"exitActive\":\"transitions_exitActive__1YtsH\"};","import {createAction} from '@reduxjs/toolkit'\n\nconst addContactRequest = createAction('contacts/addRequest');\nconst addContactSuccess = createAction('contacts/addSuccess');\nconst addContactError = createAction('contacts/addError');\n\nconst fetchContactsRequest = createAction('contacts/fetchRequest')\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess')\nconst fetchContactsError = createAction('contacts/fetchError')\n\nconst removeContactRequest = createAction('contacts/removeRequest')\nconst removeContactSuccess = createAction('contacts/removeSuccess')\nconst removeContactError = createAction('contacts/removeError')\n\nconst changeFilter = createAction('contacts/filter')\n\nexport default {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    fetchContactsRequest,\n    fetchContactsSuccess,\n    fetchContactsError,\n    removeContactRequest,\n    removeContactSuccess,\n    removeContactError,\n    changeFilter\n}","import axios from 'axios'\nimport contactsActions from './contactsActions'\n\naxios.defaults.baseURL = 'http://localhost:2000' \n\nconst addContact = (name,number) => dispatch =>{\n    dispatch(contactsActions.addContactRequest())\n\n    axios\n    .post('/contacts', {name,number})\n    .then(({data}) => dispatch(contactsActions.addContactSuccess(data)))\n    .catch(error => dispatch(contactsActions.addContactError(error)))\n\n}\n\nconst fetchContacts = () => dispatch => {\n    dispatch(contactsActions.fetchContactsRequest());\n\n    axios\n    .get('/contacts')\n    .then(({data}) => dispatch(contactsActions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(contactsActions.fetchContactsError(error)))\n}\n\n\n\nconst removeContact = id => dispatch =>{\n\n    dispatch(contactsActions.removeContactRequest())\n\n    axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\n    .catch(error => dispatch(contactsActions.removeContactError(error)))\n\n}\n\nexport default {addContact, fetchContacts, removeContact}","import {createSelector} from '@reduxjs/toolkit'\n\nconst getContacts = state => state.contacts.items;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getLoading = state => state.contacts.loading\n\nconst getVisibleContacts = createSelector (\n    [getContacts,getFilter],\n    (contacts, filter) => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter))\n})\n\n\nconst getContactById = createSelector(\n    [(state,contactId)=> contactId, getContacts],\n    (contactId,contacts) => contacts.find(item => item.id === contactId))\n\n\nexport default { getFilter,getLoading, getVisibleContacts, getContactById}\n","import React from 'react';\nimport './Layout.css'\n\nconst Layout = ({children}) => <div className=\"Layout\"> {children}</div> ;\n\nexport default  Layout;","import React from 'react'\nimport styles from './Appbar.module.css'\nimport { CSSTransition} from 'react-transition-group'\nimport transitions from '../transitions.module.css'\n\n\nconst Appbar = () => (\n    <header className={styles.header}>\n    <CSSTransition in={true} appear={true} classNames={transitions} timeout={500} >\n    <h1 className={styles.title}>Phonebook</h1>\n    </CSSTransition>\n    </header>\n)\n\nexport default Appbar;","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport contactsOperations from '../../redux/contacts/contactsOperations'\nimport styles from './ContactForm.module.css'\n\nclass ContactForm extends Component{\n\n    state={\n        name:'',\n        number:''\n    }\n\n\n    handleChange= e => {\n        const {name, value } = e.target\n            this.setState({[name]:value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const {name,number} = this.state\n        if (name && number){\n        this.props.onAddContact(name,number)\n        this.setState({name:'', number:''})\n        } \n    }\n\n    render(){\n        const {name, number} = this.state\n        return(\n            <>\n            \n            <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n            <label \n                htmlFor='name'\n                className={styles.contactFormItem}\n\n                >Name</label>\n            <input\n                className={styles.contactFormItem}\n                type='text'\n                id='name'\n                name='name'\n                value={name}\n                onChange={this.handleChange}\n                \n            />\n            <label \n                htmlFor='phone'\n                className={styles.contactFormItem}\n            >Phone</label>\n\n            <input\n            className={styles.contactFormItem}\n            type='text'\n            id='phone'\n            name='number'\n            value={number}\n            onChange={this.handleChange}\n            />\n\n            <button \n            className={styles.contactBtn}\n            >Add contact</button>\n\n            </form>\n            </>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    onAddContact: contactsOperations.addContact\n}\n\nexport default connect(null,mapDispatchToProps)(ContactForm)","import React from 'react'\nimport styles from './Contact.module.css'\nimport {connect} from 'react-redux'\nimport contactsOperations from '../../redux/contacts/contactsOperations'\nimport PropTypes from 'prop-types';\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\n\nconst Contact = ({name,number , onRemove}) => {\n    console.log('Comtact re-render', name)\n    return(\n    <li className={styles.contact}>\n    <p className={styles.contactData}>{name}</p>\n    <p className={styles.contactData}>{number}</p>\n    <button \n    className={styles.button} \n    onClick={onRemove}\n    >X</button>\n    </li>\n    \n    )}\n\nconst mapStateToProps = (state,ownProps) => {\n    const contact = contactsSelectors.getContactById(state, ownProps.id)\n \n return {...contact}\n};\n\n\nconst mapDispatchToProps = (dispatch, ownProps) =>({\n    onRemove: () => dispatch(contactsOperations.removeContact(ownProps.id))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Contact);\n\n\nContact.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onRemove: PropTypes.func\n}","import React from 'react'\nimport {connect} from 'react-redux'\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition , TransitionGroup} from 'react-transition-group'\n// import PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact'\nimport styles from './ContactList.module.css'\nimport transitions from './transitions.module.css'\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\n\nconst ContactList = ({contacts}) => {\n    return(\n    <TransitionGroup component='ul' className={styles.contactList}>\n    {contacts.map(contact => \n        \n    <CSSTransition \n        classNames={transitions}\n        timeout={200}\n        key={uuidv4()}> \n        \n        <Contact id={contact.id}/>\n       \n    </CSSTransition> )}\n   \n    </TransitionGroup>\n\n    // <ul className={styles.contactList}>\n    // {contacts.map(contact => <Contact key={contact.id} id={contact.id}/> )}\n    // </ul>\n\n\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    return ({ contacts: contactsSelectors.getVisibleContacts(state) })\n}\n\n\n\nexport default connect(mapStateToProps)(ContactList);\n\n// ContactList.propTypes = {\n//     contacts: PropTypes.shape(PropTypes.string.isRequired),\n\n// }\n\n","import React from 'react'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../../redux/contacts/contactsActions'\nimport styles from './Filter.module.css'\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\n\nconst Filter = ({value, onChangeFilter}) =>(\n    <div className={styles.filterContainer}>\n    <label className={styles.filterName} htmlFor='filter'>Find contacts by name</label>\n    <input\n    className={styles.filterField}\n    type='text'\n    value={value}\n    onChange={e=> onChangeFilter(e.target.value)}\n    id='filter'/>\n    </div>\n)\n\nconst mapStateToProps = (state) =>({\n    value: contactsSelectors.getFilter(state)\n})\n\nconst mapDispatchToProps = {\n    onChangeFilter: contactsActions.changeFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\n\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChangeFilter: PropTypes.func\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport contactsOperations from '../redux/contacts/contactsOperations'\nimport contactsSelectors from '../redux/contacts/contactsSelectors'\nimport Layout from './Layout/Layout'\nimport Appbar from './Appbar/Appbar'\nimport ContactForm from './ContactForm/ContactForm'\nimport ContactList from './ContactList/ContactList'\nimport Filter from './Filter/Filter'\n\nclass App  extends Component {\n  componentDidMount(){\n    this.props.onFetchContacts();\n  }\n \n  render(){\n    return (\n    <Layout>\n    {this.props.isLoadingContacts && <h1> LOADING...</h1>}\n      <Appbar/>\n      <ContactForm/>\n      <Filter/>\n      <ContactList/>\n    </Layout>\n  )}\n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: contactsSelectors.getLoading(state) ,\n})\n\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperations.fetchContacts,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {combineReducers} from 'redux';\nimport {createReducer} from '@reduxjs/toolkit'\nimport contactsActions from './contactsActions'\n\n\nconst addContact = (state,action) => {\n    return [...state, action.payload]\n};\nconst removeContact = (state, action) => {\n    return state.filter(contact => contact.id !== action.payload)\n} ;\n\nconst items = createReducer([],{\n    [contactsActions.fetchContactsSuccess]: (state,action) => action.payload,\n    [contactsActions.addContactSuccess]: addContact,\n    [contactsActions.removeContactSuccess]: removeContact\n})\n\nconst filter =  createReducer('',{\n    [contactsActions.changeFilter]: (state,action) => action.payload\n})\n\nconst loading = createReducer(false,{\n    [contactsActions.addContactRequest]: () => true,\n    [contactsActions.addContactSuccess]: () => false,\n    [contactsActions.addContactError]: () => false,\n    [contactsActions.fetchContactsRequest]: () => true,\n    [contactsActions.fetchContactsSuccess]: () => false,\n    [contactsActions.fetchContactsError]: () => false,\n    [contactsActions.removeContactRequest]: () => true,\n    [contactsActions.removeContactSuccess]: () => false,\n    [contactsActions.removeContactError]: () => false\n})\n\nexport default combineReducers({\n    items,\n    loading,\n    filter\n})\n","import {configureStore} from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contactsReducers'\n\n\nconst store = configureStore({\n    reducer:{ \n        contacts: contactsReducer\n    }\n})\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './components/App'\nimport store from './redux/store'\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}